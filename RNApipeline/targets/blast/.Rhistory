library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
setwd("~/DropBox/AndersenLab/LabFolders/Mostafa/Manuscripts/Benzimidazoles/Github-BZ-prep/BZlocal/analyses")
load("../diffexp/Diffexp.Rda")
load("../expression/TPM.Rda")
DE_TPM <- merge(exp_merged,TPMf,by="WB_ID") %>%
select(1,6:9,2:5,10:25)
DE_TPMf <- DE_TPM %>%
filter(Rpadj <= 0.05) %>%
filter(Gpadj <= 0.05) %>%
filter(abs(Rlog2FC) > 0.5849) %>%
filter(abs(Glog2FC) > 0.5849) %>%
#filter for expression in both CB and N2 (min ~ mean of 1 TPM per sample)
filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 4) %>%
filter((CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 4) %>%
#filter for min mean expression of ~10 in EITHER strain
filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 40 | (CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 40) %>%
#filter anti-correlation
filter((sign(Rlog2FC)+sign(Glog2FC)) == 0) %>%
#filter N2 mRNA low (Rlog2FC < 0) (direction of effect)
filter(Rlog2FC < 0)
###### Cross-reference filtered list (TPMf) with unique 21-mer blast target list
load("Blast_targets.Rda")
DE_TPMf <- DE_TPM %>%
dplyr::filter(Rpadj <= 0.05) %>%
dplyr::filter(Gpadj <= 0.05) %>%
dplyr::filter(abs(Rlog2FC) > 0.5849) %>%
dplyr::filter(abs(Glog2FC) > 0.5849) %>%
#dplyr::filter for expression in both CB and N2 (min ~ mean of 1 TPM per sample)
dplyr::filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 4) %>%
dplyr::filter((CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 4) %>%
#dplyr::filter for min mean expression of ~10 in EITHER strain
dplyr::filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 40 | (CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 40) %>%
#dplyr::filter anti-correlation
dplyr::filter((sign(Rlog2FC)+sign(Glog2FC)) == 0) %>%
#dplyr::filter N2 mRNA low (Rlog2FC < 0) (direction of effect)
dplyr::filter(Rlog2FC < 0)
load("Blast_targets.Rda")
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
setwd("~/DropBox/AndersenLab/LabFolders/Mostafa/Manuscripts/Benzimidazoles/Github-BZ-prep/BZlocal/analyses")
#load DEseq differential expression output
load("../diffexp/Diffexp.Rda")
#load strintie TPM expression values
load("../expression/TPM.Rda")
#merge DE and TPM data and reorder columns
DE_TPM <- merge(exp_merged,TPMf,by="WB_ID") %>%
select(1,6:9,2:5,10:25)
#filter based on p-value (<= 0.05) and FC (>=1.5-fold) (430 candidates left)
DE_TPMf <- DE_TPM %>%
dplyr::filter(Rpadj <= 0.05) %>%
dplyr::filter(Gpadj <= 0.05) %>%
dplyr::filter(abs(Rlog2FC) > 0.5849) %>%
dplyr::filter(abs(Glog2FC) > 0.5849) %>%
#filter for expression in both CB and N2 (min ~ mean of 1 TPM per sample)
dplyr::filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 4) %>%
dplyr::filter((CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 4) %>%
#filter for min mean expression of ~10 in EITHER strain
dplyr::filter((N2_A_R_TPM+N2_B_R_TPM+N2_C_R_TPM+N2_D_R_TPM) >= 40 | (CB_A_R_TPM+CB_B_R_TPM+CB_C_R_TPM+CB_D_R_TPM) >= 40) %>%
#filter anti-correlation
dplyr::filter((sign(Rlog2FC)+sign(Glog2FC)) == 0) %>%
#filter N2 mRNA low (Rlog2FC < 0) (direction of effect)
dplyr::filter(Rlog2FC < 0)
###### Cross-reference filtered list (TPMf) with unique 21-mer blast target list
load("Blast_targets.Rda")
#run code below only once
#### load BLAST data #####
setwd("../targets/blast/N2blast.txt")
N2unique_targets <- read.csv("../targets/blast/N2_blast.txt", header=F, sep="\t")
colnames(N2unique_targets) <- c("Query","Chr","PID","AlnLen","Mismatch","Gaps","Qstart","Qend","Start","End","Evalue","Bitscore")
N2unique_targets <- N2unique_targets %>% mutate(Source = "N2unique")
CBunique_targets <- read.csv("../targets/blast/CB_blast.txt", header=F, sep="\t")
colnames(CBunique_targets) <- c("Query","Chr","PID","AlnLen","Mismatch","Gaps","Qstart","Qend","Start","End","Evalue","Bitscore")
CBunique_targets <- CBunique_targets %>% mutate(Source = "CBunique")
All_targets <- rbind(N2unique_targets,CBunique_targets) %>%
dplyr::select(-Gaps,-Evalue,-Bitscore) %>%
dplyr::mutate(Query2 = Query) %>%
dplyr::separate(Query, c("Del", "Query"), sep = ":", remove = TRUE) %>%
dplyr::select(-Del) %>%
separate(Query, c("QChr","QLeft", "QRight"), sep = "_", remove = TRUE) %>%
dplyr::mutate(Query = Query2) %>% select(-Query2) %>%
#Filter for piRNAs originating from N2 QTL region (N2unique and US) N2 coords
#Filter for piRNAs originating from CB QTL region (CBunique) CB coords
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "N2unique" & QLeft >= 15570000 & QRight <=16010000,"NO",Delete)) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "CBunique" & QLeft >= 15338314 & QRight <=15772091,"NO",Delete)) %>%
dplyr::filter(Delete == "NO") %>% select(-Delete) %>%
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(Chr == "IV" & Start > 15570000 & End <=16010000,"YES","NO")) %>%   #Filter out targets mapping to QTL region
dplyr::filter(Delete == "NO") %>% select(-Delete)
All_targets <- All_targets %>% #rearrange columns
dplyr::select(Query,Source,QChr,QLeft,QRight,Qstart,Qend,PID,AlnLen,Mismatch,Chr,Start,End) %>%
dplyr::select(-QChr,-QLeft,-QRight,-Qstart,-Qend) %>%
dplyr::mutate(TChr = Chr, TStart = Start, TEnd = End) %>% select(-Chr,-Start,-End)
setwd("../targets/blast/")
N2unique_targets <- read.csv("../targets/blast/N2_blast.txt", header=F, sep="\t")
colnames(N2unique_targets) <- c("Query","Chr","PID","AlnLen","Mismatch","Gaps","Qstart","Qend","Start","End","Evalue","Bitscore")
N2unique_targets <- N2unique_targets %>% mutate(Source = "N2unique")
CBunique_targets <- read.csv("../targets/blast/CB_blast.txt", header=F, sep="\t")
colnames(CBunique_targets) <- c("Query","Chr","PID","AlnLen","Mismatch","Gaps","Qstart","Qend","Start","End","Evalue","Bitscore")
CBunique_targets <- CBunique_targets %>% mutate(Source = "CBunique")
All_targets <- rbind(N2unique_targets,CBunique_targets) %>%
dplyr::select(-Gaps,-Evalue,-Bitscore) %>%
dplyr::mutate(Query2 = Query) %>%
dplyr::separate(Query, c("Del", "Query"), sep = ":", remove = TRUE) %>%
dplyr::select(-Del) %>%
tidyr::separate(Query, c("QChr","QLeft", "QRight"), sep = "_", remove = TRUE) %>%
dplyr::mutate(Query = Query2) %>% select(-Query2) %>%
#Filter for piRNAs originating from N2 QTL region (N2unique and US) N2 coords
#Filter for piRNAs originating from CB QTL region (CBunique) CB coords
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "N2unique" & QLeft >= 15570000 & QRight <=16010000,"NO",Delete)) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "CBunique" & QLeft >= 15338314 & QRight <=15772091,"NO",Delete)) %>%
dplyr::filter(Delete == "NO") %>% select(-Delete) %>%
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(Chr == "IV" & Start > 15570000 & End <=16010000,"YES","NO")) %>%   #Filter out targets mapping to QTL region
dplyr::filter(Delete == "NO") %>% select(-Delete)
All_targets <- All_targets %>% #rearrange columns
dplyr::select(Query,Source,QChr,QLeft,QRight,Qstart,Qend,PID,AlnLen,Mismatch,Chr,Start,End) %>%
dplyr::select(-QChr,-QLeft,-QRight,-Qstart,-Qend) %>%
dplyr::mutate(TChr = Chr, TStart = Start, TEnd = End) %>% select(-Chr,-Start,-End)
All_targets <- rbind(N2unique_targets,CBunique_targets) %>%
dplyr::select(-Gaps,-Evalue,-Bitscore) %>%
dplyr::mutate(Query2 = Query) %>%
dplyr::separate(Query, c("Del", "Query"), sep = ":", remove = TRUE) %>%
dplyr::select(-Del) %>%
tidyr::separate(Query, c("QChr","QLeft", "QRight"), sep = "_", remove = TRUE) %>%
dplyr::mutate(Query = Query2) %>%
dplyr::select(-Query2) %>%
#Filter for piRNAs originating from N2 QTL region (N2unique and US) N2 coords
#Filter for piRNAs originating from CB QTL region (CBunique) CB coords
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "N2unique" & QLeft >= 15570000 & QRight <=16010000,"NO",Delete)) %>%
dplyr::mutate(Delete = ifelse(QChr == "IV" & Source == "CBunique" & QLeft >= 15338314 & QRight <=15772091,"NO",Delete)) %>%
dplyr::filter(Delete == "NO") %>%
dplyr::select(-Delete) %>%
dplyr::mutate(Delete = NA) %>%
dplyr::mutate(Delete = ifelse(Chr == "IV" & Start > 15570000 & End <=16010000,"YES","NO")) %>%   #Filter out targets mapping to QTL region
dplyr::filter(Delete == "NO") %>%
dplyr::select(-Delete)
All_targets <- All_targets %>% #rearrange columns
dplyr::select(Query,Source,QChr,QLeft,QRight,Qstart,Qend,PID,AlnLen,Mismatch,Chr,Start,End) %>%
dplyr::select(-QChr,-QLeft,-QRight,-Qstart,-Qend) %>%
dplyr::mutate(TChr = Chr, TStart = Start, TEnd = End) %>%
dplyr::select(-Chr,-Start,-End)
